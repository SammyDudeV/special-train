import random  # to pick out a random element from the characters
import string  # to easily import the alphabet and digits 1-9


def password_generator(num_of_passwords, length_of_password):
    letters = string.ascii_letters
    numbers = string.digits
    symbols = "!@#$%^&*"
    if length_of_password > 1000:  # to set a limit to the length of the password
        print("\nPlease enter a length level between 1-1000 inclusive")
        quit()

    letters_input = bool(input("Would you like to include letters? Input anything if applicable, if not, skip: "))
    numbers_input = bool(input("Would you like to include numbers? Input anything if applicable, if not, skip: "))
    symbols_input = bool(input("Would you like to include symbols? Input anything if applicable, if not, skip: "))

    for iterator in range(num_of_passwords):
        print(f'Password {iterator + 1}' + ":", end=" ")  # a print statement to illustrate numbered passwords
        #  randomizing the elements and generating codes
        for print_elements in range(length_of_password):
            if letters_input:
                print(random.choice(letters), end="")
            if numbers_input:
                print(random.choice(numbers), end="")
            if symbols_input:
                print(random.choice(symbols), end="")
        print()


#  Debugging the code while letting the user input using try and except
try:
    password_generator(int(input("Enter the number of passwords you would like: ")),
                       int(input("Enter the password's length levelled from 1-1000: ")))
except ValueError or NameError:
    print("\nPlease enter an integer value")

# Simpler version:
# import random
# values = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*"
# for characters in range(10):
#     print(random.choice(values), end="")
